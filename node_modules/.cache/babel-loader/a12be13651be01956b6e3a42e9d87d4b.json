{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apatrickg/Desktop/quote-machine/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteList: [],\n      author: '',\n      quote: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.chooseQuote = this.chooseQuote.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://my-json-server.typicode.com/apatrickg/quotes/db').then(response => response.json()).then(quotes => this.setState({\n      quoteList: quotes\n    }));\n  }\n\n  chooseQuote() {\n    let randomIndex = Math.floor(Math.random() * this.state.quoteList.length);\n    return this.state.quoteList[randomIndex];\n  }\n\n  handleClick() {\n    const randomQuote = this.chooseQuote();\n    this.setState({\n      quote: randomQuote.quote,\n      author: randomQuote.author\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"new-quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apatrickg/Desktop/quote-machine/src/App.js"],"names":["React","App","Component","constructor","props","state","quoteList","author","quote","handleClick","bind","chooseQuote","componentDidMount","fetch","then","response","json","quotes","setState","randomIndex","Math","floor","random","length","randomQuote","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,WAAR;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC,EADC;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAEQG,MAAM,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,SAAS,EAACW;AAAZ,KAAd,CAFlB;AAGD;;AAEDN,EAAAA,WAAW,GAAG;AACZ,QAAIQ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKjB,KAAL,CAAWC,SAAX,CAAqBiB,MAAhD,CAAlB;AACA,WAAO,KAAKlB,KAAL,CAAWC,SAAX,CAAqBa,WAArB,CAAP;AACD;;AAEDV,EAAAA,WAAW,GAAG;AACZ,UAAMe,WAAW,GAAG,KAAKb,WAAL,EAApB;AACA,SAAKO,QAAL,CAAc;AACZV,MAAAA,KAAK,EAAEgB,WAAW,CAAChB,KADP;AAEZD,MAAAA,MAAM,EAACiB,WAAW,CAACjB;AAFP,KAAd;AAID;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BAAe;AAAA,oBAAK,KAAKpB,KAAL,CAAWG;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAvC8B;;AA0CjC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport  './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      quoteList:[],\n      author: '',\n      quote: '',\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.chooseQuote = this.chooseQuote.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('http://my-json-server.typicode.com/apatrickg/quotes/db')\n      .then(response=> response.json())\n      .then(quotes => this.setState({ quoteList:quotes }))\n  }\n\n  chooseQuote() {\n    let randomIndex = Math.floor(Math.random() * this.state.quoteList.length)\n    return this.state.quoteList[randomIndex]\n  }\n\n  handleClick() {\n    const randomQuote = this.chooseQuote();\n    this.setState({\n      quote: randomQuote.quote,\n      author:randomQuote.author\n    })\n  }\n\n  render (){\n    return (\n      <div id=\"quote-box\">\n        <div id=\"text\"><h1>{this.state.quote}</h1></div>\n        <div id=\"author\"></div>\n        <div id=\"new-quote\"></div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}