{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apatrickg/Desktop/quote-machine/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Author from './components/Author';\nimport Quote from './components/Quote';\nimport { list } from './list';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: '',\n      quote: '',\n      randomQuote: ''\n    };\n    this.randomize = this.randomize.bind(this);\n  }\n\n  randomize() {\n    const keys = Object.keys(list);\n    const randomIndex = keys[Math.floor(Math.random() * keys.length)];\n    const item = list[randomIndex];\n    const itemAuthor = item.author;\n    const itemQuote = item.quote;\n    this.setState({\n      author: itemAuthor,\n      quote: itemQuote\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: /*#__PURE__*/_jsxDEV(Quote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\",\n        children: /*#__PURE__*/_jsxDEV(Author, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"new-quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apatrickg/Desktop/quote-machine/src/App.js"],"names":["React","Author","Quote","list","App","Component","constructor","props","state","author","quote","randomQuote","randomize","bind","keys","Object","randomIndex","Math","floor","random","length","item","itemAuthor","itemQuote","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,WAAR;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,WAAW,EAAE;AAHF,KAAb;AAKA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAI;AACX,UAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYX,IAAZ,CAAb;AACA,UAAMa,WAAW,GAAGF,IAAI,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,IAAI,CAACM,MAAhC,CAAD,CAAxB;AACA,UAAMC,IAAI,GAAGlB,IAAI,CAACa,WAAD,CAAjB;AACA,UAAMM,UAAU,GAAGD,IAAI,CAACZ,MAAxB;AACA,UAAMc,SAAS,GAAGF,IAAI,CAACX,KAAvB;AAEA,SAAKc,QAAL,CAAc;AACZf,MAAAA,MAAM,EAAEa,UADI;AAEZZ,MAAAA,KAAK,EAAEa;AAFK,KAAd;AAID;;AAEDE,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AArC8B;;AAwCjC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport  './App.css';\nimport Author from './components/Author';\nimport Quote from './components/Quote'\nimport { list } from './list';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      author: '',\n      quote: '',\n      randomQuote: ''\n    }\n    this.randomize = this.randomize.bind(this)\n  }\n\n  randomize () {\n    const keys = Object.keys(list);\n    const randomIndex = keys[Math.floor(Math.random() * keys.length)];\n    const item = list[randomIndex];\n    const itemAuthor = item.author;\n    const itemQuote = item.quote;\n\n    this.setState({\n      author: itemAuthor,\n      quote: itemQuote \n    })\n  }\n\n  render () {\n    return (\n      <div id=\"quote-box\">\n        <div id=\"text\">\n          <Quote/>\n        </div>\n        <div id=\"author\">\n          <Author/>\n        </div>\n        <div id=\"new-quote\">\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}