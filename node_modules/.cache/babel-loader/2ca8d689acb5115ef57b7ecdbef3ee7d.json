{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apatrickg/Desktop/quote-machine/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteDB: [],\n      author: '',\n      quote: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.chooseQuote = this.chooseQuote.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://my-json-server.typicode.com/apatrickg/quotes/db').then(response => response.json()).then(data => {\n      this.setState({\n        quoteDB: data.quotes\n      });\n    }, () => {\n      this.handleClick();\n    }).catch(error => console.log('Error'));\n  }\n\n  chooseQuote() {\n    let random = Math.floor(Math.random() * this.quoteDB.length);\n    return this.state.quoteDB[random];\n  }\n\n  handleClick() {\n    let singleQuote = this.chooseQuote();\n    this.setState({\n      quote: singleQuote.quote,\n      author: singleQuote.author\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"new-quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apatrickg/Desktop/quote-machine/src/App.js"],"names":["React","App","Component","constructor","props","state","quoteDB","author","quote","handleClick","bind","chooseQuote","componentDidMount","fetch","then","response","json","data","setState","quotes","catch","error","console","log","random","Math","floor","length","singleQuote","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,WAAR;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,EADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAACW,IAAI,CAACE;AAAd,OAAd;AACD,KAJH,EAIK,MAAM;AACP,WAAKV,WAAL;AACD,KANH,EAOGW,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAPlB;AAQD;;AAEDZ,EAAAA,WAAW,GAAG;AACZ,QAAIa,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,KAAKlB,OAAL,CAAaqB,MAAxC,CAAb;AACA,WAAO,KAAKtB,KAAL,CAAWC,OAAX,CAAmBkB,MAAnB,CAAP;AACD;;AAEDf,EAAAA,WAAW,GAAG;AACZ,QAAImB,WAAW,GAAG,KAAKjB,WAAL,EAAlB;AACA,SAAKO,QAAL,CAAc;AACZV,MAAAA,KAAK,EAACoB,WAAW,CAACpB,KADN;AAEZD,MAAAA,MAAM,EAACqB,WAAW,CAACrB;AAFP,KAAd;AAID;;AAGDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,+BAAe;AAAA,oBAAK,KAAKxB,KAAL,CAAWG;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7C8B;;AAgDjC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport  './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      quoteDB:[],\n      author: '',\n      quote: '',\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.chooseQuote = this.chooseQuote.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('http://my-json-server.typicode.com/apatrickg/quotes/db')\n      .then(response=> response.json())\n      .then((data) => {\n        this.setState({quoteDB:data.quotes})\n      }, () => {\n        this.handleClick()\n      })\n      .catch(error => console.log('Error'))\n  }\n\n  chooseQuote() {\n    let random = Math.floor(Math.random() * this.quoteDB.length)\n    return this.state.quoteDB[random]\n  }\n\n  handleClick() {\n    let singleQuote = this.chooseQuote();\n    this.setState({\n      quote:singleQuote.quote,\n      author:singleQuote.author\n    })\n  }\n\n\n  render (){\n    return (\n      <div id=\"quote-box\">\n        <div id=\"text\"><h1>{this.state.quote}</h1></div>\n        <div id=\"author\"></div>\n        <div id=\"new-quote\"></div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}